/*
                tempo[1] = clock();
                if (aux == 1) {                         // para entrar pela primeira vez no while
                    tempo[0] = tempo[1] - 5000;
                    aux--;
                }
                int tempoPassado = ((tempo[1]-tempo[0])/1000);

                if ((nroInimigos % 2) == 0)             // escolher cor dos inimigos
                    corInimigo = 'R';
                else if ((nroInimigos % 2) == 1)
                    corInimigo = 'G';

                if (tempoPassado == 5) {
                    if (nroInimigos < MAX_INIMIGOS) {
                        nroInimigos++; //aumenta os inimigos q vão aparecendo
                        if (corInimigo == 'R')
                            criaInimigos(inimigos, nroInimigos, inimigoRedDown, &personagem, obstaculos, nroBlocos, corInimigo); //adicionar corretamente //mando o array de structs
                        else if (corInimigo == 'G')
                            criaInimigos(inimigos, nroInimigos, inimigoGreenDown, &personagem, obstaculos, nroBlocos, corInimigo);
                        tempo[0] = clock();
                    }
                }
*/


               /* for (int i = 0; i < nroInimigos; i++) { // vai um a um nos inimigos, até o último (nroInimigos)

                    Rectangle posicaoInicialInimigo = inimigos[i].posicao;
                    colisaoInimigoCenario = FALSE;
                    colisaoDoInimigo = FALSE;
                    bool ultrapassaCenario = (inimigos[i].posicao.x > screenWidth - inimigos[i].posicao.width) || (inimigos[i].posicao.x < 0) || (inimigos[i].posicao.y > screenHeight - inimigos[i].posicao.height) || (inimigos[i].posicao.y < 50);
                    if(ultrapassaCenario) {
                        inimigos[i].posicao = posicaoInicialInimigo;
                        colisaoInimigoCenario = TRUE; // manda a informação de q colidiu com algo (nesse caso, extremos da janela)
                    }
                  
                    inimigos[i].colisao = FALSE; //variavel que será usada para colisão entre inimigos
                    colisaoDoInimigo = checaColisaoInimigos(nroInimigos, inimigos, &personagem, i, obstaculos, nroBlocos);
                    if(colisaoDoInimigo)
                        inimigos[i].posicao = posicaoInicialInimigo;

                    modoInimigos(&inimigos[i], &personagem); //mando o endereço de um inimigo em especifico
                    movInimigos (&inimigos[i], posicaoInicialInimigo, &personagem, i, colisaoInimigoCenario, colisaoDoInimigo, corInimigo, inimigoRedUp,  inimigoRedDown,  inimigoRedLeft,  inimigoRedRight,  inimigoGreenUp,  inimigoGreenDown,  inimigoGreenLeft,  inimigoGreenRight);
                    //faz a movimentação já levando em consideração o modo
                }*/

                  /*Rectangle posicaoInicial = personagem.posicao;// Guardando posicao inicial antes de colisoes, etc
                atualizaPosicao(&personagem, personagemRight, personagemLeft, personagemUp, personagemDown);
                //Colisao Cenario
                bool ultrapassaCenario = (personagem.posicao.x > screenWidth - personagem.posicao.width) || (personagem.posicao.x <0) || (personagem.posicao.y > screenHeight - personagem.posicao.height) || (personagem.posicao.y <50);
                if(ultrapassaCenario)
                    personagem.posicao = posicaoInicial;
                //Colisao Obstaculos
                checaColisaoArray(inimigos, &personagem, obstaculos, nroBlocos,posicaoInicial,nroInimigos);
*/